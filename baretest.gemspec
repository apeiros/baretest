# DON'T MODIFY THIS FILE! THIS FILE IS AUTOMATICALLY GENERATED.
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{baretest}
  s.version = "0.5.0.pre1"

  s.required_rubygems_version = Gem::Requirement.new("> 1.3.1") if s.respond_to? :required_rubygems_version=
  s.authors = ["Stefan Rusterholz"]
  s.date = %q{2010-05-30}
  s.default_executable = %q{baretest}
  s.description = %q{Baretest is a Testframework that tries to stay out of your way, but support
you when you want it. In order to do so it has a load of features:}
  s.email = %q{stefan.rusterholz@gmail.com}
  s.executables = ["baretest"]
  s.files = ["LICENSE.txt", "MANIFEST.txt", "README.rdoc", "bin/baretest", "doc/baretest.rdoc", "doc/mocking_stubbing_test_doubles.rdoc", "doc/news/news-0.3.0.rdoc", "doc/news/news-0.4.0.rdoc", "doc/news/news-0.4.1.rdoc", "doc/quickref.rdoc", "doc/whats_going_on.rdoc", "doc/writing_tests.rdoc", "examples/README_EXAMPLES.rdoc", "examples/components/mocha.rb", "examples/components/rack-test.rb", "examples/components/rr.rb", "examples/irb_mode/failures.rb", "examples/isolation/example1.rb", "examples/rake/test.rake", "examples/tests/00_empty.rb", "examples/tests/01_basics_I_suite_exercise_and_verify.rb", "examples/tests/02_basics_II_status_codes.rb", "examples/tests/03_basics_III_verification_helpers.rb", "examples/tests/04_basics_IV_classical_test_phases.rb", "examples/tests/05_advanced_I_dependencies.rb", "examples/tests/06_advanced_II_tags.rb", "examples/tests/07_advanced_III_requires.rb", "examples/tests/08_advanced_IV_components.rb", "examples/tests/09_expert_I_setup_variants.rb", "lib/baretest.rb", "lib/baretest/assertion.rb", "lib/baretest/commandline.rb", "lib/baretest/component/basic_verifications.rb", "lib/baretest/component/tabular_data.rb", "lib/baretest/context.rb", "lib/baretest/formatter.rb", "lib/baretest/formatter/cli.rb", "lib/baretest/formatter/none.rb", "lib/baretest/invalidselectors.rb", "lib/baretest/irb_mode.rb", "lib/baretest/layout.rb", "lib/baretest/persistence.rb", "lib/baretest/phase.rb", "lib/baretest/phase/abortion.rb", "lib/baretest/phase/error.rb", "lib/baretest/phase/exercise.rb", "lib/baretest/phase/failure.rb", "lib/baretest/phase/pending.rb", "lib/baretest/phase/setup.rb", "lib/baretest/phase/setupblockvariants.rb", "lib/baretest/phase/setupblockwithdata.rb", "lib/baretest/phase/setupexceptionhandlers.rb", "lib/baretest/phase/setuprequire.rb", "lib/baretest/phase/setuptabulardata.rb", "lib/baretest/phase/skip.rb", "lib/baretest/phase/teardown.rb", "lib/baretest/phase/verification.rb", "lib/baretest/ruby_compatibility.rb", "lib/baretest/ruby_extensions.rb", "lib/baretest/run.rb", "lib/baretest/run/cli.rb", "lib/baretest/run/minimal.rb", "lib/baretest/run/none.rb", "lib/baretest/run/spec.rb", "lib/baretest/run/tap.rb", "lib/baretest/run/xml.rb", "lib/baretest/selectors.rb", "lib/baretest/setupconstructor.rb", "lib/baretest/status.rb", "lib/baretest/statuscollection.rb", "lib/baretest/suite.rb", "lib/baretest/test.rb", "lib/baretest/uid.rb", "lib/baretest/unit.rb", "lib/baretest/use/basic_verifications.rb", "lib/baretest/use/mocha.rb", "lib/baretest/use/rack_test.rb", "lib/baretest/use/rr.rb", "lib/baretest/use/tabular_data.rb", "lib/baretest/version.rb", "lib/command.rb", "lib/command/argument.rb", "lib/command/decoratinghash.rb", "lib/command/definition.rb", "lib/command/directorynotfounderror.rb", "lib/command/env.rb", "lib/command/filenotfounderror.rb", "lib/command/kernel.rb", "lib/command/nodirectoryerror.rb", "lib/command/nofileerror.rb", "lib/command/option.rb", "lib/command/parser.rb", "lib/command/result.rb", "lib/command/types.rb", "lib/command/version.rb", "test/baretest_setup.rb", "test/suite/lib/baretest.rb", "test/suite/lib/baretest/assertion.rb", "test/suite/lib/baretest/assertion/context.rb", "test/suite/lib/baretest/assertion/failure.rb", "test/suite/lib/baretest/assertion/skip.rb", "test/suite/lib/baretest/assertion/support.rb", "test/suite/lib/baretest/irb_mode.rb", "test/suite/lib/baretest/run.rb", "test/suite/lib/baretest/run/cli.rb", "test/suite/lib/baretest/run/errors.rb", "test/suite/lib/baretest/run/interactive.rb", "test/suite/lib/baretest/run/spec.rb", "test/suite/lib/baretest/run/tap.rb", "test/suite/lib/baretest/run/xml.rb", "test/suite/lib/baretest/suite.rb"]
  s.homepage = %q{http://baretest.rubyforge.org}
  s.rdoc_options = ["--charset", "utf-8", "--tab-width", "2", "-t", "baretest-0.5.0.pre1"]
  s.require_paths = ["lib"]
  s.rubyforge_project = %q{baretest}
  s.rubygems_version = %q{1.3.6}
  s.summary = %q{A testframework that doesnâ€™t stand in your way or forces you to learn a new language. Two methods is all that is required to know. If you need it, it provides you with all kinds of features to support you writing your tests.}

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
    else
    end
  else
  end
end
