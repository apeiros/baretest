Test-Double===========Origins of failures-------------------* bug in test subject (the object being tested)* bug in test collaborators (objects required for a particular test)* bug in environment (system)* bug in test itselfAssumptions-----------* every collaborator is the test subject in another suiteTesting Aims------------* Testing whether an isolated component works as expected* Testing whether a component works together with all its collaborators as expectedRegression Aims---------------* Figuring whether a change introduces breakage in test subject itself* Figuring whether a change introduces breakage in collaborations* Figuring whether a change makes subsequent changes on collaborators necessaryWhat does "work correctly" mean?--------------------------------* Positive Behaviour (happy path):  * Public identifiers (variable, constant, global, method, ...) exist  * Public method accepts expected input  * Public method yields expected values for given input  * Public method has expected side effect for given input (creates a file, prints to stdout, ...)  * Public method has expected return value* Negative Behaviour:  * Public method rejects invalid inputWhat does "input" mean?-----------------------* Arguments* Environment  * Constants  * Globals  * IO (Filesystem, Sockets/Network, Database, ...)Links-----* http://robots.thoughtbot.com/post/159805295/spy-vs-spy